{"version":3,"sources":["data/backpic.jpg","Components/ChildData.js","Components/RepresentanteData.js","Components/PostData.js","Components/LandingPage.js","Components/Inicio.js","Components/Help.js","Components/MainPay.js","Components/Main.js","Components/UI.js","Components/UserValidation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChildData","child","HijoNombre","HijoApellido","Seccion","Nivel","selectable","shadow","rowKeyColumn","rows","id","tipo","Rubros","Tipo","valor","ValorCuota","price","name","tooltip","numeric","RepresentanteData","rdata","childlist","Hijos","map","index","key","NumeroDocumento","RepresentanteNombres","PostData","repList","repData","filter","repDataFilter","props","ci","Component","LandingPage","handleCirucChange","event","setState","ciruc","target","value","state","text","this","e","style","margin","type","onChange","onClick","corrienteData","diferidoData","repField","handleFieldChange","addData","Inicio","Container","className","Form","Col","FormGroup","color","Help","MainPay","repdata","console","log","alert","styleObj","fontSize","textAlign","paddingTop","fontweight","styleTableHeader","fontwieght","background","styleButtonChild","styleButtonMonthly","styleButtonYearly","RepresentanteApellidos","col","Button","raised","colored","handleMensualInput","handleYearInput","Saldo","Main","exact","path","component","UI","transparent","title","scroll","to","App","size","logo","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.05fe8fa3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backpic.2d98eade.jpg\";","import React from 'react'\nimport RubroData from './RubroData'\nimport {DataTable, TableHeader} from 'react-mdl';\n\nexport default function ChildData({child}) {\n\n    /* const rubroList = child.Rubros.map((rubro, index) => <RubroData key={rubro.Tipo} rubro={rubro} /> \n    ) */\n\n    return (\n        <div>\n            <span>Nombre Alumno: {child.HijoNombre} \" \" { child.HijoApellido } </span>\n            <span>Seccion: { child.Seccion } </span>\n            <span>Nivel: { child.Nivel } </span>\n            {/* {rubroList} */}\n            <div>\n            <DataTable\n                selectable\n                shadow={0}\n                rowKeyColumn=\"id\"\n                rows={[\n                    {id: 1001, tipo: child.Rubros[0].Tipo , valor: child.Rubros[0].ValorCuota, price: 2.90},\n                    {id: 1002, tipo: child.Rubros[1].Tipo , valor: child.Rubros[1].ValorCuota, price: 2.90},\n                    {id: 1003, tipo: child.Rubros[2].Tipo , valor: child.Rubros[2].ValorCuota, price: 2.90}\n                  \n                ]}\n            >\n                <TableHeader name=\"tipo\" tooltip=\" \">Rubro</TableHeader>\n                <TableHeader numeric name=\"valor\" tooltip=\" \">Valor</TableHeader>\n        \n            </DataTable>\n\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport ChildData from './ChildData'\n\nexport default function RepresentanteData({rdata}) {\n\n   const childlist = rdata.Hijos.map((child, index) => <ChildData key={child.HijoNombre} child={child}/>\n      )\n\n    return (\n        <div>\n            <span> CI: {rdata.NumeroDocumento} </span>\n            <span>Nombre: {rdata.RepresentanteNombres}</span>\n            {childlist}\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport repData from '../data/DataJasonvs1.json'\nimport RepresentanteData from './RepresentanteData'\n\nclass PostData extends Component {\n    \n    render() {\n        const repList =  repData.filter(repDataFilter => repDataFilter.NumeroDocumento === this.props.ci).map(rdata => \n            <RepresentanteData key={rdata.NumeroDocumento} rdata={rdata} />\n        );\n\n        return <div>\n            {repList}\n        </div>\n        \n    }\n}\n\nexport default PostData\n","import React, { Component } from 'react'\nimport PostDate from './PostData'\nimport PostData from './PostData'\n\nclass LandingPage extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             ciruc: '',\n             text: \"\",\n             repData: []\n        }\n    }\n\n    addData(){\n        this.setState({repData: [...this.state.repData, '' ]})\n    }\n\n    searchData(){\n\n    }\n\n    corrienteData(){\n\n    }\n\n    diferidoData(){\n\n    }\n\n    handleCirucChange = event => {\n        this.setState({\n            ciruc: event.target.value\n        })\n    }\n\n    handleFieldChange(e,index){\n        this.state.repData[index] = e.target.value\n\n        this.setState({repData: this.state.repData})\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                       <h1>Consulta de Obligaciones</h1>\n\n                    <div>\n                        <form style={{margin: '3.25rem'}}>\n                            <label>CI/RUC</label>\n                            <input style={{margin: '0.5rem'}}\n                                type='text' \n                                value={this.state.ciruc} \n                                onChange={this.handleCirucChange}\n                            />\n                        \n                        {/*  <TextField \n                                hintText=\"Ingrese su numero de identificacion\"\n                                floatingLabelText=\"CI/RUC\"\n                                onChange={this.handleCirucChange}\n                                value={this.state.ciruc}\n                            /> */}\n                        \n                            <button style={{margin: '.5rem'}} onClick={(e)=>this.corrienteData(e)}>Corriente</button>\n                            <button style={{margin: '.5rem'}} onClick={(e)=>this.diferidoData(e)}>Diferido</button>\n                            </form>\n                    </div>\n\n                    {\n                        this.state.repData.map((repField, index)=>{\n                            return(\n                                <div key={index} style={{margin: '.5rem'}}>\n\n                                    <input onChange={(e)=>this.handleFieldChange(e, index)} value={repField} />\n                                </div>\n                            )\n                        })\n                    }\n                    <hr />\n                    <button style={{margin: '1rem'}} onClick={(e)=>this.addData(e)}>Add Field</button>\n\n                    <hr />\n                </div>\n                <div>\n                    <h1>{this.state.ciruc}</h1>\n                    <PostData ci = {this.state.ciruc}/>\n                </div> \n            </div>\n            \n        )\n    }\n}\n\nexport default LandingPage\n","import React from 'react'\nimport {Container, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\n\nexport default function Inicio() {\n    return (\n        <div>\n             <Container className=\"conteinerBackground\" >  \n                    <Form className=\"form\" >\n                        <Col>\n                            <FormGroup color=\"#240C0C\">\n                                Begin\n                            </FormGroup>\n                        </Col>\n                    </Form>\n                </Container>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Help() {\n    return (\n        <div>\n            <h1>AYUDA</h1>\n            <spam>En este portal usted podra realizar el pago de la maticulacion y colegiatura.</spam>\n            <h1>Contactanos:</h1>\n            <spam>tesoreia@jengling.edu.ec</spam>\n            <spam>secretaria@jengling.edu.ec</spam>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport repData from '../data/DataJasonvs1.json'\nimport RepresentanteData from './RepresentanteData'\nimport {DataTable, TableHeader, Grid, Cell} from 'react-mdl';\nimport {Container, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\n\n\nclass MainPay extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             repdata: []\n        }\n    }\n\n    handleMensualInput(e) {\n        console.log(e.target.value);\n    }\n\n    handleYearInput(e) {\n        alert(e.target.NumeroDocumento ,e.target.HijoApellido, e.target.HijoNombre, e.target.value);\n        console.log(e.target.value);\n    }\n\n    render() {\n\n        const styleObj = {\n            fontSize: 14,\n            color: \"white\",\n            textAlign: \"left\",\n            paddingTop: \"100px\",\n            fontweight: \"bold\",\n        }\n\n        const styleTableHeader = {\n            fontSize: 12,\n            color: 'white',\n            textAlign: \"center\",\n            // paddingTop: \"100px\",\n            fontwieght: \"bold\",\n            background: '#8B1B40'\n        }\n\n        const styleButtonChild = {\n            fontSize: 12,\n            color: 'white',\n            fontwieght: \"bold\",\n            background: '#023167'\n        }\n\n        const styleButtonMonthly = {\n            fontSize: 16,\n            color: 'white',\n            textAlign: \"center\",\n            // paddingTop: \"100px\",\n            fontwieght: \"bold\",\n            background: '#FF8C00'\n        }\n        \n        const styleButtonYearly = {\n            fontSize: 16,\n            color: 'white',\n            textAlign: \"center\",\n            // paddingTop: \"100px\",\n            fontwieght: \"bold\",\n            background: '#3CB371'\n        }\n\n        const repList =  repData.filter(repDataFilter => repDataFilter.NumeroDocumento === \"1\").map(rdata => \n            \n            <div key={rdata.NumeroDocumento} >\n                <Container className=\"bannerBackground\" >  \n                    <Form className=\"form\" >\n                        <Col>\n                            <FormGroup>\n                            <h1>Representante: {rdata.RepresentanteNombres} {rdata.RepresentanteApellidos} </h1>\n                            <h1>CI: {rdata.NumeroDocumento} </h1>\n                            </FormGroup>\n                        </Col>\n                    </Form>\n                </Container>\n                {rdata.Hijos.map((child, index) =>  \n                <div key={child.HijoNombre}>         \n                    <Grid >\n                        <Cell col={4}>\n                        <Button className='childButton' style={styleButtonChild} raised colored>\n                            <span style= {styleObj}>Nombre Alumno: {child.HijoNombre} { child.HijoApellido } </span>\n                            <p/>\n                            <span style= {styleObj}>Seccion: { child.Seccion }  </span>\n                            <p/>\n                            <span style= {styleObj}>Nivel { child.Nivel } </span>\n                            {/* {rubroList} */}\n                            </Button>\n                        </Cell>\n                        <Cell col={4}>\n                                <div>\n                                    <Button style={styleButtonMonthly} className='smallButton'\n                                            onClick={(e) => this.handleMensualInput(e,'value')}\n                                    > \n                                    Mensual</Button>\n                                    <p/>\n                                </div>\n                                <div>\n                                    <DataTable\n                                        selectable\n                                        shadow={2}\n                                        rowKeyColumn=\"id\"\n                                        rows={[\n                                            {id: 1001, tipo: child.Rubros[0].Tipo , valor: child.Rubros[0].ValorCuota},\n                                            {id: 1002, tipo: child.Rubros[1].Tipo , valor: child.Rubros[1].ValorCuota},\n                                            {id: 1003, tipo: child.Rubros[2].Tipo , valor: child.Rubros[2].ValorCuota},\n                                            {id: 1004, tipo: child.Rubros[3].Tipo , valor: child.Rubros[3].ValorCuota}\n                                        \n                                        ]}\n                                    >\n                                        {/* {if (id='1004') =>{} } */}\n                                        <TableHeader style={styleTableHeader} name=\"tipo\" tooltip=\" \">Rubro</TableHeader>\n                                        <TableHeader style={styleTableHeader} numeric name=\"valor\" tooltip=\" \">Valor</TableHeader>\n                                \n                                    </DataTable>\n                                </div>\n                        </Cell>\n                        <Cell col={4}>\n                                <div>    \n                                <Button style={styleButtonYearly} className='smallButton'\n                                        onClick={(e) => this.handleYearInput(e,'value')}\n                                >Anual</Button>\n                                <p/>\n                                </div>\n                                <div>\n                                    <DataTable\n                                        \n                                        selectable\n                                        shadow={0}\n                                        rowKeyColumn=\"id\"\n                                        rows={[\n                                            {id: 1001, tipo: child.Rubros[0].Tipo , valor: child.Rubros[0].Saldo},\n                                            {id: 1002, tipo: child.Rubros[1].Tipo , valor: child.Rubros[1].Saldo},\n                                            {id: 1003, tipo: child.Rubros[2].Tipo , valor: child.Rubros[2].Saldo},\n                                            {id: 1004, tipo: child.Rubros[3].Tipo , valor: child.Rubros[3].Saldo}\n                                        \n                                        ]}\n                                    >\n                                        <TableHeader style={styleTableHeader} name=\"tipo\" tooltip=\" \">Rubro</TableHeader>\n                                        <TableHeader style={styleTableHeader} numeric name=\"valor\" tooltip=\" \">Valor</TableHeader>\n                                \n                                    </DataTable>\n                                </div>\n                        </Cell>\n                       {/*  <Cell col={2}>\n                            <div>\n                                <p/>\n                                <Button style={styleButtonMonthly} className='smallButton'> Mensual</Button>\n                                <p/>\n                                <Button style={styleButtonYearly} className='smallButton'>Anual</Button>\n                            </div>\n                        </Cell> */}\n                    </Grid>\n                </div>\n                )}\n            </div> \n        );\n\n        return (\n            <div>\n               <Button colored='#FF6347' >test</Button>\n                <Container className=\"conteinerBackground\" >  \n                    <Form className=\"form\" >\n                        <Col>\n                            <FormGroup color=\"#240C0C\">\n                            {repList}\n                            </FormGroup>\n                        </Col>\n                    </Form>\n                </Container>\n                \n            </div>\n        )\n    }\n}\n\nexport default MainPay\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport LandingPage from './LandingPage';\nimport PostData from './PostData';\nimport Inicio from './Inicio';\nimport Help from './Help';\nimport MainPay from './MainPay';\n\nconst Main=() =>(\n    <Switch>\n        <Route exact path=\"/LandingPage\" component={LandingPage} /> \n        <Route exact path=\"/Inicio\" component={Inicio} /> \n        <Route exact path=\"/Help\" component={Help} /> \n        <Route exact path=\"/PostData\" component={PostData} /> \n        <Route exact path=\"/MainPay\" component={MainPay} />\n    </Switch>\n)\n\nexport default Main;","import React from 'react';\n// import '../../App.css';\nimport Main from './Main';\nimport { Layout, Header, Navigation, Drawer, Content} from 'react-mdl';\nimport { Link } from 'react-router-dom';\n// import img from './data/backpic.jpg'\n\nexport default function UI() {\n    return (\n        // <div style={{height: '300px', position: 'relative'}}>\n        <div>\n            {/* <Layout style={{ background: 'url(http://www.getmdl.io/assets/demos/transparent.jpg) center / cover'}}> */}\n            <Layout transparent style={{ background: 'url(/backpic.jpg) center / cover'}}> \n                <Header transparent title=\"Title\" scroll>\n                    <Navigation>\n                    <Link to=\"/Inicio\">Inicio</Link>\n                    <Link to=\"/LandingPage\">Pagos</Link>\n                    <Link to=\"/Help\">Ayuda</Link>\n                    <Link to=\"/PostData\">Json Data</Link>\n                    <Link to=\"/MainPay\">Main Pago</Link>\n                    </Navigation>\n                </Header>\n                <Drawer title=\"Title\">\n                    <Navigation>\n                    <Link to=\"/Inicio\">Inicio</Link>\n                    <Link to=\"/LandingPage\">Pagos</Link>\n                    <Link to=\"/Help\">Ayuda</Link>\n                    <Link to=\"/PostData\">Json Data</Link>\n                    <Link to=\"/MainPay\">Main Pago</Link>\n                    </Navigation>\n                </Drawer>\n                <Content>\n                    {<Main/>}\n                    {/* <UserValidation/> */}\n                </Content>\n            </Layout>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport {Layout, Card, CardTitle, CardText, CardActions, CardMenu, Button, IconButton} from 'react-mdl'\nimport uI from './UI'\n\nclass UserValidation extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             ciruc: '',\n             \n        }\n    }\n\n    handleStart = event => {\n      uI()\n    }\n\n    render() {\n        return (\n            <div>\n                <Card shadow={0} style={{width: '512px', margin: 'auto'}}>\n                    <CardTitle style={{color: '#fff', height: '176px', background: 'url(http://www.getmdl.io/assets/demos/welcome_card.jpg) center / cover'}}>Welcome</CardTitle>\n                    <CardText>\n\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Mauris sagittis pellentesque lacus eleifend lacinia...\n                        <form style={{margin: '3.25rem'}}>\n                            <label>CI/RUC</label>\n                            <input style={{margin: '0.5rem'}}\n                                type='text' \n                                value={this.state.ciruc} \n                                onChange={this.handleCirucChange}\n                            />\n                            <button style={{margin: '.5rem'}} onClick={(e)=>this.corrienteData(e)}>Corriente</button>\n                            <button style={{margin: '.5rem'}} onClick={(e)=>this.handleStart(e)}>Diferido</button>\n                        </form>\n                    </CardText>\n                    <CardActions border>\n                        <Button colored onClick={()=> uI()} >Get Started </Button>\n                    </CardActions>\n                    <CardMenu style={{color: '#fff'}}>\n                        <IconButton name=\"share\" />\n                    </CardMenu>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default UserValidation\n","import React from 'react';\nimport { Layout, Header, Navigation, Drawer, Content, Footer, FooterSection, FooterLinkList} from 'react-mdl';\nimport './App.css';\nimport Main from './Components/Main';\nimport UserValidation from './Components/UserValidation';\nimport UI from './Components/UI';\nimport { Link } from 'react-router-dom';\nimport img from './data/backpic.jpg'\n\nfunction App() {\n  // console.log('./data/backpic.jpg')\n  return (\n<div className=\"demo-big-content\">\n      <Layout transparent style={{ background: 'url(/backpic.jpg) center / cover'}}>\n      {/* <Layout > */}\n        <Header transparent title=\"Title\" scroll>\n        </Header>\n        <Content>\n            {/* <Main/> */}\n            {/* <UserValidation/> */}\n            <UI/>\n        </Content>\n        <Footer size=\"mini\">\n          <FooterSection type=\"left\" logo=\"Title\">\n              <FooterLinkList>\n                  <a href=\"#\">Help</a>\n                  <a href=\"#\">Privacy & Terms</a>\n              </FooterLinkList>\n          </FooterSection>\n      </Footer>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n/*   <React.StrictMode>\n    <App />\n  </React.StrictMode>, */\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}